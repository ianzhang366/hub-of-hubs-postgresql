---
- name: create table managed_clusters
  postgresql_table:
    name: "{{ status_schema }}.{{ managed_clusters_table }}"
    db: "{{ hoh_db }}"
    columns:
      - id uuid primary key
      - leaf_hub_id uuid
      - status jsonb
      - created_at timestamp not null default now()
      - updated_at timestamp not null default now()
  become: yes
  become_user: postgres

- name: add timestamp trigger
  vars:
    table: "{{ managed_clusters_table }}"
    schema: "{{ status_schema }}"
  include_tasks: create_timestamp_trigger.yaml

- name: create enforcement type
  postgresql_query:
    db: "{{ hoh_db }}"
    query: |
      DO $$
      BEGIN
          IF NOT EXISTS (
            SELECT 1 FROM pg_type t
            LEFT JOIN pg_namespace p ON t.typnamespace=p.oid
            WHERE t.typname='{{ enforcement_type }}' AND p.nspname='{{ spec_schema }}'
          ) THEN
              CREATE TYPE {{ spec_schema }}.{{ enforcement_type }} AS  ENUM ('enforce', 'inform');
          END IF;
      END
      $$;
  become: yes
  become_user: postgres

- name: create table {{ policies_table }}
  postgresql_table:
    name: "{{ status_schema }}.{{ policies_table }}"
    db: "{{ hoh_db }}"
    columns:
      - policy_id uuid primary key
      - managed_cluster_id uuid
      - compliance boolean
      - enforcement {{ spec_schema }}.{{ enforcement_type }}
      - created_at timestamp not null default now()
      - updated_at timestamp not null default now()
  become: yes
  become_user: postgres

- name: add timestamp trigger
  vars:
    table: "{{ policies_table }}"
    schema: "{{ status_schema }}"
  include_tasks: create_timestamp_trigger.yaml
