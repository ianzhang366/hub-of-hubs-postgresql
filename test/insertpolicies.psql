\set policy `curl -s https://raw.githubusercontent.com/open-cluster-management/policy-collection/main/community/AU-Audit-and-Accountability/policy-openshift-audit-logs-sample.yaml | yq eval 'select(.kind == "Policy")' - -j`
\set uuid `uuidgen`
insert into spec.policies (id,payload) values(:'uuid',:'policy');
\set uuid `uuidgen`
\set policy `curl -s https://raw.githubusercontent.com/open-cluster-management/policy-collection/main/community/AC-Access-Control/policy-roles-no-wildcards.yaml | yq eval 'select(.kind == "Policy")' - -j`
\set uuid `uuidgen`
insert into spec.policies (id, payload) values(:'uuid',:'policy');
\set placementbinding `curl -s https://raw.githubusercontent.com/open-cluster-management/policy-collection/main/community/AU-Audit-and-Accountability/policy-openshift-audit-logs-sample.yaml | yq eval 'select(.kind == "PlacementBinding")' - -j`
\set uuid `uuidgen`
insert into spec.placementbindings (id, payload) values(:'uuid',:'placementbinding');
\set placementbinding `curl -s https://raw.githubusercontent.com/open-cluster-management/policy-collection/main/community/AC-Access-Control/policy-roles-no-wildcards.yaml | yq eval 'select(.kind == "PlacementBinding")' - -j`
\set uuid `uuidgen`
insert into spec.placementbindings (id, payload) values(:'uuid',:'placementbinding');
\set placementrule `curl -s https://raw.githubusercontent.com/open-cluster-management/policy-collection/main/community/AU-Audit-and-Accountability/policy-openshift-audit-logs-sample.yaml | yq eval 'select(.kind == "PlacementRule")' - -j`
\set uuid `uuidgen`
insert into spec.placementrules (id, payload) values(:'uuid',:'placementrule');
\set placementrule `curl -s https://raw.githubusercontent.com/open-cluster-management/policy-collection/main/community/AC-Access-Control/policy-roles-no-wildcards.yaml | yq eval 'select(.kind == "PlacementRule")' - -j`
\set uuid `uuidgen`
insert into spec.placementrules (id, payload) values(:'uuid',:'placementrule');
